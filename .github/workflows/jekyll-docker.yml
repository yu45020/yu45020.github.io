name: Cache Docker image for Jekyll site

on:
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write  # Required to push to GHCR
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Pull cached Docker image (if available)
        run: docker pull ghcr.io/${{ github.repository }}/jekyll-image:latest || echo "No cached image found, will build from scratch"

      - name: Build Docker image (with cache)
        run: |
          docker build \
            --target=ci \
            --tag ghcr.io/${{ github.repository }}/jekyll-image:latest \
            --cache-from=ghcr.io/${{ github.repository }}/jekyll-image:latest \
            .

      - name: Push updated Docker image to GHCR
        run: docker push ghcr.io/${{ github.repository }}/jekyll-image:latest

      - name: Build site with Jekyll inside Docker container
        run: |
          BASE_URL="${{ steps.pages.outputs.page_url }}"
          docker run -v $(pwd)/_site:/app/_site ghcr.io/${{ github.repository }}/jekyll-image:latest bundle exec jekyll build --baseurl "$BASE_URL"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
# 

name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-
              
      - name: Build Docker image
        run: |
          mkdir -p /tmp/.docker-cache
          docker build --target=ci --tag=jekyll-image --cache-from type=local,src=/tmp/.docker-cache --cache-to type=local,dest=/tmp/.docker-cache .

      - name: Build site with Jekyll inside Docker container
        run: |
          BASE_URL="${{ steps.deployment.outputs.page_url }}"
          docker run -v ${{ github.workspace }}/_site:/app/_site jekyll-image bundle exec jekyll build --baseurl "$BASE_URL"

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
